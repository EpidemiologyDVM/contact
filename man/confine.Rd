% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/confine.R
\name{confine}
\alias{confine}
\title{Identify and Remove Data Points Outside of a Specified Area}
\usage{
confine(x, point.x = NULL, point.y = NULL, confinementCoord.x,
  confinementCoord.y, filterOutput = TRUE)
}
\arguments{
\item{x}{List or data frame that will be filtered.}

\item{point.x}{Description imminent}

\item{point.y}{Description imminent}

\item{confinementCoord.x}{Description imminent}

\item{confinementCoord.y}{Description imminent}

\item{filterOutput}{Description imminent}

\item{id}{Vector of length(nrow(data.frame(x))) or singular character data, detailng the relevant colname in x, that denotes what date information will be used. If argument == NULL, datetime.append assumes a column withe colname "id" exists in x. Defaults to NULL.}
}
\description{
dup (a.k.a. Multiple instance filter) identifies and removes timepoints when tracked individuals were observed in >1 place concurrently. If avg == TRUE, duplicates are replaced by a single row describing an individuals' average location (e.g., planar xy coordinates) during the duplicated time point. If avg == FALSE, all duplicated timepoints will be removed, as there is no way for the function to determine which instance among the duplicates should stay. If users are not actually interested in filtering datasets, but rather, determining what observations should be filtered, they may set filterOutput == FALSE. By doing so, this function will append a "duplicated" column to the dataset, which reports values that describe if any timepoints in a given individual's path are duplicated. Values are: 0: timepoint is not duplicated, 1: timepoint is duplicated.
}
\details{
Identifies and removes timepoints when tracked individuals were observed outside of a defined polygon (note: the polygon should be described by the vectors confinementCoord.x (x coordinates) and confinementCoord.y (y coordinates) (note: these vectors must be the same length and the coordinates should be listed in the clockwise or counter-clockwise order that they are observed on the confining polygon), which identify where polygon vertices exist).

If users are not actually interested in filtering datasets, but rather, determining what observations should be filtered, they may set filterOutput == FALSE. By doing so, this function will append a "confinement_status" column to the output dataframe, which reports the results of sp::point.in.polygon function that is used to determine if individuals are confined within a given polygon. In this column, values are: 0: point is strictly exterior to pol; 1: point is strictly interior to pol; 2: point lies on the relative interior of an edge of pol; 3: point is a vertex of pol (https://www.rdocumentation.org/packages/sp/versions/1.3-1/topics/point.in.polygon).
}
\examples{
Examples imminent
}
\keyword{confinement}
\keyword{filter}
\keyword{polygon}
