% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/dist2All_df.R
\name{dist2All_df}
\alias{dist2All_df}
\title{Calculate Distances Between All Individuals}
\usage{
dist2All_df(x = NULL, id = NULL, dateTime = NULL, point.x = NULL,
  point.y = NULL, poly.xy = NULL, elev = NULL, parallel = TRUE,
  dataType = "Point", lonlat = FALSE, numVertices = 4)
}
\arguments{
\item{x}{Description imminent}

\item{id}{Vector of length(nrow(data.frame(x))) or singular character data, detailng the relevant colname in x, that denotes what date information will be used. If argument == NULL, datetime.append assumes a column withe colname "id" exists in x. Defaults to NULL.}

\item{dateTime}{Description imminent}

\item{point.x}{Description imminent}

\item{point.y}{Description imminent}

\item{poly.xy}{Description imminent}

\item{elev}{Description imminent}

\item{parallel}{Description imminent}

\item{dataType}{Description imminent}

\item{lonlat}{Description imminent}

\item{numVertices}{Description imminent}
}
\description{
Calculates the distance between all tracked individuals at a given timestep. Users can choose whether to calculate distances based on a single point, or polygons representative of individuals' locations. If individuals set dataType == "Polygon", the distance matrix reported describes the shortest distances between polygons' edges (Note that the rgeos::gDistance function is used to obtain these distances).
}
\details{
If dataType == "Point," users have the option of setting lonlat == TRUE (by default lonlat == FALSE). lonlat is a logical argument that tells the function to calculate the distance between points on the WGS ellipsoid (if lonlat == TRUE), or on a plane (lonlat == FALSE) (see raster::pointDistance). If lonlat == TRUE, coordinates should be in degrees. Otherwise, coordinates should represent planar ('Euclidean') space (e.g. units of meters).This function is not currently able to calculate distances between polygons on the WGS ellipsoid (i.e., if dataType == "Polygon," lonlat must = FALSE). We aim to address this issue in future versions.

Note that if inputting a separate matrix/dataframe with polygon xy coordinates (poly.xy), coordinates must be arranged in the format of those in referencePointToPolygon outputs (i.e., col1 = point1.x, col2 = point1.y, col3 =point2.x, col4 = point2.y, etc., with points listed in a clockwise (or counter-clockwise) order).
}
\examples{
Examples imminent
}
\keyword{GRC}
\keyword{data-processing}
\keyword{location}
\keyword{planar}
\keyword{point}
\keyword{polygon}
