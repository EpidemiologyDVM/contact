% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/contactDur.all.R
\name{contactDur.all}
\alias{contactDur.all}
\title{Identify Inter-animal Contacts}
\usage{
contactDur.all(x, dist.threshold = 1, sec.threshold = 10,
  blocking = FALSE, blockUnit = "hours", blockLength = 1,
  equidistant.time = FALSE, parallel = TRUE, reportParameters = TRUE)
}
\arguments{
\item{x}{Output from the dist.all function. Can be either a data frame or 
non-data-frame list.}

\item{dist.threshold}{Numeric. Radial distance (in meters) within which 
"contact" can be said to occur. Defaults to 1. Note: If you are 
defining conttacts as occurring when polygons intersect, set 
dist.threshold to 0.}

\item{sec.threshold}{Numeric. Dictates the maximum amount of time between 
concurrent observations during which potential "contact" events remain 
unbroken. Defaults to 10.}

\item{blocking}{Logical. If TRUE, contacts will be evaluated for temporal 
blocks spanning blockLength blockUnit (e.g., 6 hours) within the data 
set. Defaults to FALSE.}

\item{blockUnit}{Numerical. Describes the number blockUnits within each 
temporal block. Defaults to 1.}

\item{blockLength}{Character string taking the values, "secs," "mins," 
"hours," "days," or "weeks." Describes the temporal unit associated with
each block. Defaults to "hours."}

\item{equidistant.time}{Logical. If TRUE, location fixes in individuals' 
movement paths are temporally equidistant (e.g., all fix intervals are 
30 seconds). Defaults to FALSE. Note: This is a time-saving argument. 
A sub-function here calculates the time difference (dt) between each 
location fix. If all fix intervals in an individuals' path are 
identical, it saves a lot of time.}

\item{parallel}{Logical. If TRUE, sub-functions within the contactDur.all 
wrapper will be parallelized. Note that this can significantly speed up 
processing of relatively small data sets, but may cause R to crash due 
to lack of available memory when attempting to process large datasets. 
Defaults to TRUE.}

\item{reportParameters}{Logical. If TRUE, function argument values will be 
appended to output data frame(s). Defaults to TRUE.}
}
\description{
This function uses the output from dist.all to determine when and for how 
    long tracked individuals are in "contact" with one another. Individuals 
    are said to be in a "contact" event if they are observed within a given 
    distance (<= dist.threshold) at a given timestep. Contacts are broken 
    when individuals are observed outside the specified distance threshold 
    from one another for > sec.threshold seconds. Sec.threshold dictates the
    maximum amount of time between concurrent observations during which 
    potential "contact" events remain unbroken. For example, if 
    sec.threshold == 10, only "contacts" occurring within 10secs of one 
    another will be regarded as a single "contact" event of duration sum(h).
    If in this case, a time difference between contacts was 11 seconds, the 
    function will report two separate contact events.
    
The output of this function is a data frame containing a time-ordered 
    contact edge set detailing inter-animal contacts.
}
\examples{
#load the calves data set
data(calves)

#pre-process the data
calves.dateTime<-datetime.append(calves, date = calves$date, time = 
    calves$time) #create a dataframe with dateTime identifiers for location 
    #fixes.
calves.agg<-tempAggregate(calves.dateTime, id = calves.dateTime$calftag, 
    dateTime = calves.dateTime$dateTime, point.x = calves.dateTime$x, 
    point.y = calves.dateTime$y, secondAgg = 10, extrapolate.left = FALSE, 
    extrapolate.right = FALSE, resolutionLevel = "Full", parallel = TRUE, 
    na.rm = FALSE, smooth.type = 1) #smooth locations to 10-second fix 
    #intervals. Note that na.rm was set to "FALSE" because randomizing this 
    #data set according to the Spiegel et al. method (see below) requires 
    #equidistant time points.

#generate empirical time-ordered network edges.
calves.dist<-dist2All(x = calves.agg, parallel = TRUE, dataType = "Point", 
    lonlat = FALSE) #calculate distance between all individuals at each 
    #timepoint.
calves.contact.block<-contactDur.all(x = calves.dist, dist.threshold=1, 
    sec.threshold=10, blocking = TRUE, blockUnit = "hours", blockLength = 1,
    equidistant.time = FALSE, parallel = TRUE, reportParameters = TRUE) 
    #compile inter-calf contacts with 1-hr blocking. Contacts are defined 
    #here as occurring when calves were within 1 m of one another.
calves.contact.NOblock<-contactDur.all(x = calves.dist, dist.threshold=1, 
    sec.threshold=10, blocking = TRUE, blockUnit = "hours", blockLength = 1,
    equidistant.time = FALSE, parallel = TRUE, reportParameters = TRUE) 
    #Contacts are defined here as occurring when calves were within 1 m of 
    #one another.

#More examples will be added later.
}
\keyword{contact}
\keyword{data-processing}
